// Code generated by protoc-gen-go.
// source: steamdatagram_messages.proto
// DO NOT EDIT!

package dota

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ESteamDatagramMsgID int32

const (
	ESteamDatagramMsgID_k_ESteamDatagramMsg_RouterPingRequest             ESteamDatagramMsgID = 1
	ESteamDatagramMsgID_k_ESteamDatagramMsg_RouterPingReply               ESteamDatagramMsgID = 2
	ESteamDatagramMsgID_k_ESteamDatagramMsg_GameserverPingRequest         ESteamDatagramMsgID = 3
	ESteamDatagramMsgID_k_ESteamDatagramMsg_GameserverPingReply           ESteamDatagramMsgID = 4
	ESteamDatagramMsgID_k_ESteamDatagramMsg_GameserverSessionRequest      ESteamDatagramMsgID = 5
	ESteamDatagramMsgID_k_ESteamDatagramMsg_GameserverSessionEstablished  ESteamDatagramMsgID = 6
	ESteamDatagramMsgID_k_ESteamDatagramMsg_NoSession                     ESteamDatagramMsgID = 7
	ESteamDatagramMsgID_k_ESteamDatagramMsg_Diagnostic                    ESteamDatagramMsgID = 8
	ESteamDatagramMsgID_k_ESteamDatagramMsg_DataClientToRouter            ESteamDatagramMsgID = 9
	ESteamDatagramMsgID_k_ESteamDatagramMsg_DataRouterToServer            ESteamDatagramMsgID = 10
	ESteamDatagramMsgID_k_ESteamDatagramMsg_DataServerToRouter            ESteamDatagramMsgID = 11
	ESteamDatagramMsgID_k_ESteamDatagramMsg_DataRouterToClient            ESteamDatagramMsgID = 12
	ESteamDatagramMsgID_k_ESteamDatagramMsg_Stats                         ESteamDatagramMsgID = 13
	ESteamDatagramMsgID_k_ESteamDatagramMsg_ClientPingSampleRequest       ESteamDatagramMsgID = 14
	ESteamDatagramMsgID_k_ESteamDatagramMsg_ClientPingSampleReply         ESteamDatagramMsgID = 15
	ESteamDatagramMsgID_k_ESteamDatagramMsg_ClientToRouterSwitchedPrimary ESteamDatagramMsgID = 16
)

var ESteamDatagramMsgID_name = map[int32]string{
	1:  "k_ESteamDatagramMsg_RouterPingRequest",
	2:  "k_ESteamDatagramMsg_RouterPingReply",
	3:  "k_ESteamDatagramMsg_GameserverPingRequest",
	4:  "k_ESteamDatagramMsg_GameserverPingReply",
	5:  "k_ESteamDatagramMsg_GameserverSessionRequest",
	6:  "k_ESteamDatagramMsg_GameserverSessionEstablished",
	7:  "k_ESteamDatagramMsg_NoSession",
	8:  "k_ESteamDatagramMsg_Diagnostic",
	9:  "k_ESteamDatagramMsg_DataClientToRouter",
	10: "k_ESteamDatagramMsg_DataRouterToServer",
	11: "k_ESteamDatagramMsg_DataServerToRouter",
	12: "k_ESteamDatagramMsg_DataRouterToClient",
	13: "k_ESteamDatagramMsg_Stats",
	14: "k_ESteamDatagramMsg_ClientPingSampleRequest",
	15: "k_ESteamDatagramMsg_ClientPingSampleReply",
	16: "k_ESteamDatagramMsg_ClientToRouterSwitchedPrimary",
}
var ESteamDatagramMsgID_value = map[string]int32{
	"k_ESteamDatagramMsg_RouterPingRequest":             1,
	"k_ESteamDatagramMsg_RouterPingReply":               2,
	"k_ESteamDatagramMsg_GameserverPingRequest":         3,
	"k_ESteamDatagramMsg_GameserverPingReply":           4,
	"k_ESteamDatagramMsg_GameserverSessionRequest":      5,
	"k_ESteamDatagramMsg_GameserverSessionEstablished":  6,
	"k_ESteamDatagramMsg_NoSession":                     7,
	"k_ESteamDatagramMsg_Diagnostic":                    8,
	"k_ESteamDatagramMsg_DataClientToRouter":            9,
	"k_ESteamDatagramMsg_DataRouterToServer":            10,
	"k_ESteamDatagramMsg_DataServerToRouter":            11,
	"k_ESteamDatagramMsg_DataRouterToClient":            12,
	"k_ESteamDatagramMsg_Stats":                         13,
	"k_ESteamDatagramMsg_ClientPingSampleRequest":       14,
	"k_ESteamDatagramMsg_ClientPingSampleReply":         15,
	"k_ESteamDatagramMsg_ClientToRouterSwitchedPrimary": 16,
}

func (x ESteamDatagramMsgID) Enum() *ESteamDatagramMsgID {
	p := new(ESteamDatagramMsgID)
	*p = x
	return p
}
func (x ESteamDatagramMsgID) String() string {
	return proto.EnumName(ESteamDatagramMsgID_name, int32(x))
}
func (x *ESteamDatagramMsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESteamDatagramMsgID_value, data, "ESteamDatagramMsgID")
	if err != nil {
		return err
	}
	*x = ESteamDatagramMsgID(value)
	return nil
}
func (ESteamDatagramMsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor35, []int{0} }

type CMsgSteamDatagramRouterPingReply struct {
	ClientTimestamp      *uint32  `protobuf:"fixed32,1,opt,name=client_timestamp" json:"client_timestamp,omitempty"`
	LatencyDatacenterIds []uint32 `protobuf:"fixed32,2,rep,packed,name=latency_datacenter_ids" json:"latency_datacenter_ids,omitempty"`
	LatencyPingMs        []uint32 `protobuf:"varint,3,rep,packed,name=latency_ping_ms" json:"latency_ping_ms,omitempty"`
	YourPublicIp         *uint32  `protobuf:"fixed32,4,opt,name=your_public_ip" json:"your_public_ip,omitempty"`
	ServerTime           *uint32  `protobuf:"fixed32,5,opt,name=server_time" json:"server_time,omitempty"`
	Challenge            *uint64  `protobuf:"fixed64,6,opt,name=challenge" json:"challenge,omitempty"`
	SecondsUntilShutdown *uint32  `protobuf:"varint,7,opt,name=seconds_until_shutdown" json:"seconds_until_shutdown,omitempty"`
	ClientCookie         *uint32  `protobuf:"fixed32,8,opt,name=client_cookie" json:"client_cookie,omitempty"`
	XXX_unrecognized     []byte   `json:"-"`
}

func (m *CMsgSteamDatagramRouterPingReply) Reset()         { *m = CMsgSteamDatagramRouterPingReply{} }
func (m *CMsgSteamDatagramRouterPingReply) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramRouterPingReply) ProtoMessage()    {}
func (*CMsgSteamDatagramRouterPingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{0}
}

func (m *CMsgSteamDatagramRouterPingReply) GetClientTimestamp() uint32 {
	if m != nil && m.ClientTimestamp != nil {
		return *m.ClientTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetLatencyDatacenterIds() []uint32 {
	if m != nil {
		return m.LatencyDatacenterIds
	}
	return nil
}

func (m *CMsgSteamDatagramRouterPingReply) GetLatencyPingMs() []uint32 {
	if m != nil {
		return m.LatencyPingMs
	}
	return nil
}

func (m *CMsgSteamDatagramRouterPingReply) GetYourPublicIp() uint32 {
	if m != nil && m.YourPublicIp != nil {
		return *m.YourPublicIp
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetServerTime() uint32 {
	if m != nil && m.ServerTime != nil {
		return *m.ServerTime
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetChallenge() uint64 {
	if m != nil && m.Challenge != nil {
		return *m.Challenge
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetSecondsUntilShutdown() uint32 {
	if m != nil && m.SecondsUntilShutdown != nil {
		return *m.SecondsUntilShutdown
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetClientCookie() uint32 {
	if m != nil && m.ClientCookie != nil {
		return *m.ClientCookie
	}
	return 0
}

type CMsgSteamDatagramGameserverPing struct {
	ClientSession           *uint32 `protobuf:"varint,1,opt,name=client_session" json:"client_session,omitempty"`
	ClientSteamId           *uint64 `protobuf:"fixed64,2,opt,name=client_steam_id" json:"client_steam_id,omitempty"`
	ClientTimestamp         *uint32 `protobuf:"fixed32,3,opt,name=client_timestamp" json:"client_timestamp,omitempty"`
	RouterTimestamp         *uint32 `protobuf:"fixed32,4,opt,name=router_timestamp" json:"router_timestamp,omitempty"`
	RouterGameserverLatency *uint32 `protobuf:"varint,5,opt,name=router_gameserver_latency" json:"router_gameserver_latency,omitempty"`
	SeqNumberRouter         *uint32 `protobuf:"varint,6,opt,name=seq_number_router" json:"seq_number_router,omitempty"`
	SeqNumberE2E            *uint32 `protobuf:"varint,7,opt,name=seq_number_e2e" json:"seq_number_e2e,omitempty"`
	XXX_unrecognized        []byte  `json:"-"`
}

func (m *CMsgSteamDatagramGameserverPing) Reset()         { *m = CMsgSteamDatagramGameserverPing{} }
func (m *CMsgSteamDatagramGameserverPing) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramGameserverPing) ProtoMessage()    {}
func (*CMsgSteamDatagramGameserverPing) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{1}
}

func (m *CMsgSteamDatagramGameserverPing) GetClientSession() uint32 {
	if m != nil && m.ClientSession != nil {
		return *m.ClientSession
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPing) GetClientSteamId() uint64 {
	if m != nil && m.ClientSteamId != nil {
		return *m.ClientSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPing) GetClientTimestamp() uint32 {
	if m != nil && m.ClientTimestamp != nil {
		return *m.ClientTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPing) GetRouterTimestamp() uint32 {
	if m != nil && m.RouterTimestamp != nil {
		return *m.RouterTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPing) GetRouterGameserverLatency() uint32 {
	if m != nil && m.RouterGameserverLatency != nil {
		return *m.RouterGameserverLatency
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPing) GetSeqNumberRouter() uint32 {
	if m != nil && m.SeqNumberRouter != nil {
		return *m.SeqNumberRouter
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPing) GetSeqNumberE2E() uint32 {
	if m != nil && m.SeqNumberE2E != nil {
		return *m.SeqNumberE2E
	}
	return 0
}

type CMsgSteamDatagramGameServerAuthTicket struct {
	TimeExpiry         *uint32                                             `protobuf:"fixed32,1,opt,name=time_expiry" json:"time_expiry,omitempty"`
	AuthorizedSteamId  *uint64                                             `protobuf:"fixed64,2,opt,name=authorized_steam_id" json:"authorized_steam_id,omitempty"`
	AuthorizedPublicIp *uint32                                             `protobuf:"fixed32,3,opt,name=authorized_public_ip" json:"authorized_public_ip,omitempty"`
	GameserverSteamId  *uint64                                             `protobuf:"fixed64,4,opt,name=gameserver_steam_id" json:"gameserver_steam_id,omitempty"`
	GameserverNetId    *uint64                                             `protobuf:"fixed64,5,opt,name=gameserver_net_id" json:"gameserver_net_id,omitempty"`
	Signature          []byte                                              `protobuf:"bytes,6,opt,name=signature" json:"signature,omitempty"`
	AppId              *uint32                                             `protobuf:"varint,7,opt,name=app_id" json:"app_id,omitempty"`
	ExtraFields        []*CMsgSteamDatagramGameServerAuthTicket_ExtraField `protobuf:"bytes,8,rep,name=extra_fields" json:"extra_fields,omitempty"`
	XXX_unrecognized   []byte                                              `json:"-"`
}

func (m *CMsgSteamDatagramGameServerAuthTicket) Reset()         { *m = CMsgSteamDatagramGameServerAuthTicket{} }
func (m *CMsgSteamDatagramGameServerAuthTicket) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramGameServerAuthTicket) ProtoMessage()    {}
func (*CMsgSteamDatagramGameServerAuthTicket) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{2}
}

func (m *CMsgSteamDatagramGameServerAuthTicket) GetTimeExpiry() uint32 {
	if m != nil && m.TimeExpiry != nil {
		return *m.TimeExpiry
	}
	return 0
}

func (m *CMsgSteamDatagramGameServerAuthTicket) GetAuthorizedSteamId() uint64 {
	if m != nil && m.AuthorizedSteamId != nil {
		return *m.AuthorizedSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramGameServerAuthTicket) GetAuthorizedPublicIp() uint32 {
	if m != nil && m.AuthorizedPublicIp != nil {
		return *m.AuthorizedPublicIp
	}
	return 0
}

func (m *CMsgSteamDatagramGameServerAuthTicket) GetGameserverSteamId() uint64 {
	if m != nil && m.GameserverSteamId != nil {
		return *m.GameserverSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramGameServerAuthTicket) GetGameserverNetId() uint64 {
	if m != nil && m.GameserverNetId != nil {
		return *m.GameserverNetId
	}
	return 0
}

func (m *CMsgSteamDatagramGameServerAuthTicket) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *CMsgSteamDatagramGameServerAuthTicket) GetAppId() uint32 {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return 0
}

func (m *CMsgSteamDatagramGameServerAuthTicket) GetExtraFields() []*CMsgSteamDatagramGameServerAuthTicket_ExtraField {
	if m != nil {
		return m.ExtraFields
	}
	return nil
}

type CMsgSteamDatagramGameServerAuthTicket_ExtraField struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	StringValue      *string `protobuf:"bytes,2,opt,name=string_value" json:"string_value,omitempty"`
	Int32Value       *int32  `protobuf:"zigzag32,3,opt,name=int32_value" json:"int32_value,omitempty"`
	Fixed32Value     *uint32 `protobuf:"fixed32,4,opt,name=fixed32_value" json:"fixed32_value,omitempty"`
	Fixed64Value     *uint64 `protobuf:"fixed64,5,opt,name=fixed64_value" json:"fixed64_value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSteamDatagramGameServerAuthTicket_ExtraField) Reset() {
	*m = CMsgSteamDatagramGameServerAuthTicket_ExtraField{}
}
func (m *CMsgSteamDatagramGameServerAuthTicket_ExtraField) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramGameServerAuthTicket_ExtraField) ProtoMessage() {}
func (*CMsgSteamDatagramGameServerAuthTicket_ExtraField) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{2, 0}
}

func (m *CMsgSteamDatagramGameServerAuthTicket_ExtraField) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgSteamDatagramGameServerAuthTicket_ExtraField) GetStringValue() string {
	if m != nil && m.StringValue != nil {
		return *m.StringValue
	}
	return ""
}

func (m *CMsgSteamDatagramGameServerAuthTicket_ExtraField) GetInt32Value() int32 {
	if m != nil && m.Int32Value != nil {
		return *m.Int32Value
	}
	return 0
}

func (m *CMsgSteamDatagramGameServerAuthTicket_ExtraField) GetFixed32Value() uint32 {
	if m != nil && m.Fixed32Value != nil {
		return *m.Fixed32Value
	}
	return 0
}

func (m *CMsgSteamDatagramGameServerAuthTicket_ExtraField) GetFixed64Value() uint64 {
	if m != nil && m.Fixed64Value != nil {
		return *m.Fixed64Value
	}
	return 0
}

type CMsgSteamDatagramGameserverSessionRequest struct {
	Ticket           *CMsgSteamDatagramGameServerAuthTicket `protobuf:"bytes,1,opt,name=ticket" json:"ticket,omitempty"`
	ChallengeTime    *uint32                                `protobuf:"fixed32,3,opt,name=challenge_time" json:"challenge_time,omitempty"`
	Challenge        *uint64                                `protobuf:"fixed64,4,opt,name=challenge" json:"challenge,omitempty"`
	ClientCookie     *uint32                                `protobuf:"fixed32,5,opt,name=client_cookie" json:"client_cookie,omitempty"`
	XXX_unrecognized []byte                                 `json:"-"`
}

func (m *CMsgSteamDatagramGameserverSessionRequest) Reset() {
	*m = CMsgSteamDatagramGameserverSessionRequest{}
}
func (m *CMsgSteamDatagramGameserverSessionRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramGameserverSessionRequest) ProtoMessage()    {}
func (*CMsgSteamDatagramGameserverSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{3}
}

func (m *CMsgSteamDatagramGameserverSessionRequest) GetTicket() *CMsgSteamDatagramGameServerAuthTicket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

func (m *CMsgSteamDatagramGameserverSessionRequest) GetChallengeTime() uint32 {
	if m != nil && m.ChallengeTime != nil {
		return *m.ChallengeTime
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionRequest) GetChallenge() uint64 {
	if m != nil && m.Challenge != nil {
		return *m.Challenge
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionRequest) GetClientCookie() uint32 {
	if m != nil && m.ClientCookie != nil {
		return *m.ClientCookie
	}
	return 0
}

type CMsgSteamDatagramGameserverSessionEstablished struct {
	ClientCookie         *uint32 `protobuf:"fixed32,1,opt,name=client_cookie" json:"client_cookie,omitempty"`
	GameserverSteamId    *uint64 `protobuf:"fixed64,3,opt,name=gameserver_steam_id" json:"gameserver_steam_id,omitempty"`
	SecondsUntilShutdown *uint32 `protobuf:"varint,4,opt,name=seconds_until_shutdown" json:"seconds_until_shutdown,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *CMsgSteamDatagramGameserverSessionEstablished) Reset() {
	*m = CMsgSteamDatagramGameserverSessionEstablished{}
}
func (m *CMsgSteamDatagramGameserverSessionEstablished) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramGameserverSessionEstablished) ProtoMessage() {}
func (*CMsgSteamDatagramGameserverSessionEstablished) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{4}
}

func (m *CMsgSteamDatagramGameserverSessionEstablished) GetClientCookie() uint32 {
	if m != nil && m.ClientCookie != nil {
		return *m.ClientCookie
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionEstablished) GetGameserverSteamId() uint64 {
	if m != nil && m.GameserverSteamId != nil {
		return *m.GameserverSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionEstablished) GetSecondsUntilShutdown() uint32 {
	if m != nil && m.SecondsUntilShutdown != nil {
		return *m.SecondsUntilShutdown
	}
	return 0
}

type CMsgSteamDatagramNoSession struct {
	ClientCookie         *uint32 `protobuf:"fixed32,7,opt,name=client_cookie" json:"client_cookie,omitempty"`
	YourPublicIp         *uint32 `protobuf:"fixed32,2,opt,name=your_public_ip" json:"your_public_ip,omitempty"`
	ServerTime           *uint32 `protobuf:"fixed32,3,opt,name=server_time" json:"server_time,omitempty"`
	Challenge            *uint64 `protobuf:"fixed64,4,opt,name=challenge" json:"challenge,omitempty"`
	SecondsUntilShutdown *uint32 `protobuf:"varint,5,opt,name=seconds_until_shutdown" json:"seconds_until_shutdown,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *CMsgSteamDatagramNoSession) Reset()                    { *m = CMsgSteamDatagramNoSession{} }
func (m *CMsgSteamDatagramNoSession) String() string            { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramNoSession) ProtoMessage()               {}
func (*CMsgSteamDatagramNoSession) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{5} }

func (m *CMsgSteamDatagramNoSession) GetClientCookie() uint32 {
	if m != nil && m.ClientCookie != nil {
		return *m.ClientCookie
	}
	return 0
}

func (m *CMsgSteamDatagramNoSession) GetYourPublicIp() uint32 {
	if m != nil && m.YourPublicIp != nil {
		return *m.YourPublicIp
	}
	return 0
}

func (m *CMsgSteamDatagramNoSession) GetServerTime() uint32 {
	if m != nil && m.ServerTime != nil {
		return *m.ServerTime
	}
	return 0
}

func (m *CMsgSteamDatagramNoSession) GetChallenge() uint64 {
	if m != nil && m.Challenge != nil {
		return *m.Challenge
	}
	return 0
}

func (m *CMsgSteamDatagramNoSession) GetSecondsUntilShutdown() uint32 {
	if m != nil && m.SecondsUntilShutdown != nil {
		return *m.SecondsUntilShutdown
	}
	return 0
}

type CMsgSteamDatagramDiagnostic struct {
	Severity         *uint32 `protobuf:"varint,1,opt,name=severity" json:"severity,omitempty"`
	Text             *string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSteamDatagramDiagnostic) Reset()                    { *m = CMsgSteamDatagramDiagnostic{} }
func (m *CMsgSteamDatagramDiagnostic) String() string            { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramDiagnostic) ProtoMessage()               {}
func (*CMsgSteamDatagramDiagnostic) Descriptor() ([]byte, []int) { return fileDescriptor35, []int{6} }

func (m *CMsgSteamDatagramDiagnostic) GetSeverity() uint32 {
	if m != nil && m.Severity != nil {
		return *m.Severity
	}
	return 0
}

func (m *CMsgSteamDatagramDiagnostic) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type CMsgSteamDatagramDataCenterState struct {
	DataCenters      []*CMsgSteamDatagramDataCenterState_DataCenter `protobuf:"bytes,1,rep,name=data_centers" json:"data_centers,omitempty"`
	XXX_unrecognized []byte                                         `json:"-"`
}

func (m *CMsgSteamDatagramDataCenterState) Reset()         { *m = CMsgSteamDatagramDataCenterState{} }
func (m *CMsgSteamDatagramDataCenterState) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramDataCenterState) ProtoMessage()    {}
func (*CMsgSteamDatagramDataCenterState) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{7}
}

func (m *CMsgSteamDatagramDataCenterState) GetDataCenters() []*CMsgSteamDatagramDataCenterState_DataCenter {
	if m != nil {
		return m.DataCenters
	}
	return nil
}

type CMsgSteamDatagramDataCenterState_Server struct {
	Address          *string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	PingMs           *uint32 `protobuf:"varint,2,opt,name=ping_ms" json:"ping_ms,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSteamDatagramDataCenterState_Server) Reset() {
	*m = CMsgSteamDatagramDataCenterState_Server{}
}
func (m *CMsgSteamDatagramDataCenterState_Server) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramDataCenterState_Server) ProtoMessage()    {}
func (*CMsgSteamDatagramDataCenterState_Server) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{7, 0}
}

func (m *CMsgSteamDatagramDataCenterState_Server) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *CMsgSteamDatagramDataCenterState_Server) GetPingMs() uint32 {
	if m != nil && m.PingMs != nil {
		return *m.PingMs
	}
	return 0
}

type CMsgSteamDatagramDataCenterState_DataCenter struct {
	Code             *string                                    `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	ServerSample     []*CMsgSteamDatagramDataCenterState_Server `protobuf:"bytes,2,rep,name=server_sample" json:"server_sample,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *CMsgSteamDatagramDataCenterState_DataCenter) Reset() {
	*m = CMsgSteamDatagramDataCenterState_DataCenter{}
}
func (m *CMsgSteamDatagramDataCenterState_DataCenter) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramDataCenterState_DataCenter) ProtoMessage() {}
func (*CMsgSteamDatagramDataCenterState_DataCenter) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{7, 1}
}

func (m *CMsgSteamDatagramDataCenterState_DataCenter) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *CMsgSteamDatagramDataCenterState_DataCenter) GetServerSample() []*CMsgSteamDatagramDataCenterState_Server {
	if m != nil {
		return m.ServerSample
	}
	return nil
}

type CMsgSteamDatagramLinkInstantaneousStats struct {
	OutPacketsPerSecX10     *uint32 `protobuf:"varint,1,opt,name=out_packets_per_sec_x10" json:"out_packets_per_sec_x10,omitempty"`
	OutBytesPerSec          *uint32 `protobuf:"varint,2,opt,name=out_bytes_per_sec" json:"out_bytes_per_sec,omitempty"`
	InPacketsPerSecX10      *uint32 `protobuf:"varint,3,opt,name=in_packets_per_sec_x10" json:"in_packets_per_sec_x10,omitempty"`
	InBytesPerSec           *uint32 `protobuf:"varint,4,opt,name=in_bytes_per_sec" json:"in_bytes_per_sec,omitempty"`
	PingMs                  *uint32 `protobuf:"varint,5,opt,name=ping_ms" json:"ping_ms,omitempty"`
	PacketsDroppedPct       *uint32 `protobuf:"varint,6,opt,name=packets_dropped_pct" json:"packets_dropped_pct,omitempty"`
	PacketsWeirdSequencePct *uint32 `protobuf:"varint,7,opt,name=packets_weird_sequence_pct" json:"packets_weird_sequence_pct,omitempty"`
	XXX_unrecognized        []byte  `json:"-"`
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) Reset() {
	*m = CMsgSteamDatagramLinkInstantaneousStats{}
}
func (m *CMsgSteamDatagramLinkInstantaneousStats) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramLinkInstantaneousStats) ProtoMessage()    {}
func (*CMsgSteamDatagramLinkInstantaneousStats) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{8}
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) GetOutPacketsPerSecX10() uint32 {
	if m != nil && m.OutPacketsPerSecX10 != nil {
		return *m.OutPacketsPerSecX10
	}
	return 0
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) GetOutBytesPerSec() uint32 {
	if m != nil && m.OutBytesPerSec != nil {
		return *m.OutBytesPerSec
	}
	return 0
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) GetInPacketsPerSecX10() uint32 {
	if m != nil && m.InPacketsPerSecX10 != nil {
		return *m.InPacketsPerSecX10
	}
	return 0
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) GetInBytesPerSec() uint32 {
	if m != nil && m.InBytesPerSec != nil {
		return *m.InBytesPerSec
	}
	return 0
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) GetPingMs() uint32 {
	if m != nil && m.PingMs != nil {
		return *m.PingMs
	}
	return 0
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) GetPacketsDroppedPct() uint32 {
	if m != nil && m.PacketsDroppedPct != nil {
		return *m.PacketsDroppedPct
	}
	return 0
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) GetPacketsWeirdSequencePct() uint32 {
	if m != nil && m.PacketsWeirdSequencePct != nil {
		return *m.PacketsWeirdSequencePct
	}
	return 0
}

type CMsgSteamDatagramLinkLifetimeStats struct {
	PacketsSent           *uint64 `protobuf:"varint,3,opt,name=packets_sent" json:"packets_sent,omitempty"`
	KbSent                *uint64 `protobuf:"varint,4,opt,name=kb_sent" json:"kb_sent,omitempty"`
	PacketsRecv           *uint64 `protobuf:"varint,5,opt,name=packets_recv" json:"packets_recv,omitempty"`
	KbRecv                *uint64 `protobuf:"varint,6,opt,name=kb_recv" json:"kb_recv,omitempty"`
	PacketsRecvSequenced  *uint64 `protobuf:"varint,7,opt,name=packets_recv_sequenced" json:"packets_recv_sequenced,omitempty"`
	PacketsRecvDropped    *uint64 `protobuf:"varint,8,opt,name=packets_recv_dropped" json:"packets_recv_dropped,omitempty"`
	PacketsRecvOutOfOrder *uint64 `protobuf:"varint,9,opt,name=packets_recv_out_of_order" json:"packets_recv_out_of_order,omitempty"`
	PacketsRecvDuplicate  *uint64 `protobuf:"varint,10,opt,name=packets_recv_duplicate" json:"packets_recv_duplicate,omitempty"`
	PacketsRecvLurch      *uint64 `protobuf:"varint,11,opt,name=packets_recv_lurch" json:"packets_recv_lurch,omitempty"`
	XXX_unrecognized      []byte  `json:"-"`
}

func (m *CMsgSteamDatagramLinkLifetimeStats) Reset()         { *m = CMsgSteamDatagramLinkLifetimeStats{} }
func (m *CMsgSteamDatagramLinkLifetimeStats) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramLinkLifetimeStats) ProtoMessage()    {}
func (*CMsgSteamDatagramLinkLifetimeStats) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{9}
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPacketsSent() uint64 {
	if m != nil && m.PacketsSent != nil {
		return *m.PacketsSent
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetKbSent() uint64 {
	if m != nil && m.KbSent != nil {
		return *m.KbSent
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPacketsRecv() uint64 {
	if m != nil && m.PacketsRecv != nil {
		return *m.PacketsRecv
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetKbRecv() uint64 {
	if m != nil && m.KbRecv != nil {
		return *m.KbRecv
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPacketsRecvSequenced() uint64 {
	if m != nil && m.PacketsRecvSequenced != nil {
		return *m.PacketsRecvSequenced
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPacketsRecvDropped() uint64 {
	if m != nil && m.PacketsRecvDropped != nil {
		return *m.PacketsRecvDropped
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPacketsRecvOutOfOrder() uint64 {
	if m != nil && m.PacketsRecvOutOfOrder != nil {
		return *m.PacketsRecvOutOfOrder
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPacketsRecvDuplicate() uint64 {
	if m != nil && m.PacketsRecvDuplicate != nil {
		return *m.PacketsRecvDuplicate
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPacketsRecvLurch() uint64 {
	if m != nil && m.PacketsRecvLurch != nil {
		return *m.PacketsRecvLurch
	}
	return 0
}

type CMsgSteamDatagramConnectionQuality struct {
	Instantaneous    *CMsgSteamDatagramLinkInstantaneousStats `protobuf:"bytes,1,opt,name=instantaneous" json:"instantaneous,omitempty"`
	Lifetime         *CMsgSteamDatagramLinkLifetimeStats      `protobuf:"bytes,2,opt,name=lifetime" json:"lifetime,omitempty"`
	XXX_unrecognized []byte                                   `json:"-"`
}

func (m *CMsgSteamDatagramConnectionQuality) Reset()         { *m = CMsgSteamDatagramConnectionQuality{} }
func (m *CMsgSteamDatagramConnectionQuality) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramConnectionQuality) ProtoMessage()    {}
func (*CMsgSteamDatagramConnectionQuality) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{10}
}

func (m *CMsgSteamDatagramConnectionQuality) GetInstantaneous() *CMsgSteamDatagramLinkInstantaneousStats {
	if m != nil {
		return m.Instantaneous
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionQuality) GetLifetime() *CMsgSteamDatagramLinkLifetimeStats {
	if m != nil {
		return m.Lifetime
	}
	return nil
}

type CMsgSteamDatagramConnectionStatsClientToRouter struct {
	C2R              *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,1,opt,name=c2r" json:"c2r,omitempty"`
	C2S              *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,2,opt,name=c2s" json:"c2s,omitempty"`
	ClientTimestamp  *uint32                             `protobuf:"fixed32,3,opt,name=client_timestamp" json:"client_timestamp,omitempty"`
	ClientCookie     *uint32                             `protobuf:"fixed32,8,opt,name=client_cookie" json:"client_cookie,omitempty"`
	SeqNumC2R        *uint32                             `protobuf:"varint,9,opt,name=seq_num_c2r" json:"seq_num_c2r,omitempty"`
	SeqNumC2S        *uint32                             `protobuf:"varint,10,opt,name=seq_num_c2s" json:"seq_num_c2s,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) Reset() {
	*m = CMsgSteamDatagramConnectionStatsClientToRouter{}
}
func (m *CMsgSteamDatagramConnectionStatsClientToRouter) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramConnectionStatsClientToRouter) ProtoMessage() {}
func (*CMsgSteamDatagramConnectionStatsClientToRouter) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{11}
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetC2R() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.C2R
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetC2S() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.C2S
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetClientTimestamp() uint32 {
	if m != nil && m.ClientTimestamp != nil {
		return *m.ClientTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetClientCookie() uint32 {
	if m != nil && m.ClientCookie != nil {
		return *m.ClientCookie
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetSeqNumC2R() uint32 {
	if m != nil && m.SeqNumC2R != nil {
		return *m.SeqNumC2R
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetSeqNumC2S() uint32 {
	if m != nil && m.SeqNumC2S != nil {
		return *m.SeqNumC2S
	}
	return 0
}

type CMsgSteamDatagramConnectionStatsRouterToClient struct {
	R2C                       *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,1,opt,name=r2c" json:"r2c,omitempty"`
	S2C                       *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,2,opt,name=s2c" json:"s2c,omitempty"`
	ClientTimestampFromRouter *uint32                             `protobuf:"fixed32,3,opt,name=client_timestamp_from_router" json:"client_timestamp_from_router,omitempty"`
	ClientTimestampFromServer *uint32                             `protobuf:"fixed32,4,opt,name=client_timestamp_from_server" json:"client_timestamp_from_server,omitempty"`
	RouterGameserverLatency   *uint32                             `protobuf:"varint,5,opt,name=router_gameserver_latency" json:"router_gameserver_latency,omitempty"`
	SecondsUntilShutdown      *uint32                             `protobuf:"varint,6,opt,name=seconds_until_shutdown" json:"seconds_until_shutdown,omitempty"`
	ClientCookie              *uint32                             `protobuf:"fixed32,7,opt,name=client_cookie" json:"client_cookie,omitempty"`
	SeqNumR2C                 *uint32                             `protobuf:"varint,8,opt,name=seq_num_r2c" json:"seq_num_r2c,omitempty"`
	SeqNumS2C                 *uint32                             `protobuf:"varint,9,opt,name=seq_num_s2c" json:"seq_num_s2c,omitempty"`
	XXX_unrecognized          []byte                              `json:"-"`
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) Reset() {
	*m = CMsgSteamDatagramConnectionStatsRouterToClient{}
}
func (m *CMsgSteamDatagramConnectionStatsRouterToClient) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramConnectionStatsRouterToClient) ProtoMessage() {}
func (*CMsgSteamDatagramConnectionStatsRouterToClient) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{12}
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetR2C() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.R2C
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetS2C() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.S2C
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetClientTimestampFromRouter() uint32 {
	if m != nil && m.ClientTimestampFromRouter != nil {
		return *m.ClientTimestampFromRouter
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetClientTimestampFromServer() uint32 {
	if m != nil && m.ClientTimestampFromServer != nil {
		return *m.ClientTimestampFromServer
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetRouterGameserverLatency() uint32 {
	if m != nil && m.RouterGameserverLatency != nil {
		return *m.RouterGameserverLatency
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetSecondsUntilShutdown() uint32 {
	if m != nil && m.SecondsUntilShutdown != nil {
		return *m.SecondsUntilShutdown
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetClientCookie() uint32 {
	if m != nil && m.ClientCookie != nil {
		return *m.ClientCookie
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetSeqNumR2C() uint32 {
	if m != nil && m.SeqNumR2C != nil {
		return *m.SeqNumR2C
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetSeqNumS2C() uint32 {
	if m != nil && m.SeqNumS2C != nil {
		return *m.SeqNumS2C
	}
	return 0
}

type CMsgSteamDatagramConnectionStatsRouterToServer struct {
	R2S              *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,1,opt,name=r2s" json:"r2s,omitempty"`
	C2S              *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,2,opt,name=c2s" json:"c2s,omitempty"`
	ClientTimestamp  *uint32                             `protobuf:"fixed32,3,opt,name=client_timestamp" json:"client_timestamp,omitempty"`
	RouterTimestamp  *uint32                             `protobuf:"fixed32,4,opt,name=router_timestamp" json:"router_timestamp,omitempty"`
	SeqNumR2S        *uint32                             `protobuf:"varint,5,opt,name=seq_num_r2s" json:"seq_num_r2s,omitempty"`
	SeqNumC2S        *uint32                             `protobuf:"varint,6,opt,name=seq_num_c2s" json:"seq_num_c2s,omitempty"`
	ClientSteamId    *uint64                             `protobuf:"fixed64,7,opt,name=client_steam_id" json:"client_steam_id,omitempty"`
	ClientSessionId  *uint32                             `protobuf:"varint,8,opt,name=client_session_id" json:"client_session_id,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) Reset() {
	*m = CMsgSteamDatagramConnectionStatsRouterToServer{}
}
func (m *CMsgSteamDatagramConnectionStatsRouterToServer) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramConnectionStatsRouterToServer) ProtoMessage() {}
func (*CMsgSteamDatagramConnectionStatsRouterToServer) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{13}
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetR2S() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.R2S
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetC2S() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.C2S
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetClientTimestamp() uint32 {
	if m != nil && m.ClientTimestamp != nil {
		return *m.ClientTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetRouterTimestamp() uint32 {
	if m != nil && m.RouterTimestamp != nil {
		return *m.RouterTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetSeqNumR2S() uint32 {
	if m != nil && m.SeqNumR2S != nil {
		return *m.SeqNumR2S
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetSeqNumC2S() uint32 {
	if m != nil && m.SeqNumC2S != nil {
		return *m.SeqNumC2S
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetClientSteamId() uint64 {
	if m != nil && m.ClientSteamId != nil {
		return *m.ClientSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetClientSessionId() uint32 {
	if m != nil && m.ClientSessionId != nil {
		return *m.ClientSessionId
	}
	return 0
}

type CMsgSteamDatagramConnectionStatsServerToRouter struct {
	S2R              *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,1,opt,name=s2r" json:"s2r,omitempty"`
	S2C              *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,2,opt,name=s2c" json:"s2c,omitempty"`
	SeqNumS2R        *uint32                             `protobuf:"varint,3,opt,name=seq_num_s2r" json:"seq_num_s2r,omitempty"`
	SeqNumS2C        *uint32                             `protobuf:"varint,4,opt,name=seq_num_s2c" json:"seq_num_s2c,omitempty"`
	ClientSteamId    *uint64                             `protobuf:"fixed64,5,opt,name=client_steam_id" json:"client_steam_id,omitempty"`
	ClientSessionId  *uint32                             `protobuf:"varint,6,opt,name=client_session_id" json:"client_session_id,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) Reset() {
	*m = CMsgSteamDatagramConnectionStatsServerToRouter{}
}
func (m *CMsgSteamDatagramConnectionStatsServerToRouter) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramConnectionStatsServerToRouter) ProtoMessage() {}
func (*CMsgSteamDatagramConnectionStatsServerToRouter) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{14}
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetS2R() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.S2R
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetS2C() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.S2C
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetSeqNumS2R() uint32 {
	if m != nil && m.SeqNumS2R != nil {
		return *m.SeqNumS2R
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetSeqNumS2C() uint32 {
	if m != nil && m.SeqNumS2C != nil {
		return *m.SeqNumS2C
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetClientSteamId() uint64 {
	if m != nil && m.ClientSteamId != nil {
		return *m.ClientSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetClientSessionId() uint32 {
	if m != nil && m.ClientSessionId != nil {
		return *m.ClientSessionId
	}
	return 0
}

type CMsgSteamDatagramClientPingSampleRequest struct {
	ClientCookie     *uint32 `protobuf:"fixed32,1,opt,name=client_cookie" json:"client_cookie,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSteamDatagramClientPingSampleRequest) Reset() {
	*m = CMsgSteamDatagramClientPingSampleRequest{}
}
func (m *CMsgSteamDatagramClientPingSampleRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramClientPingSampleRequest) ProtoMessage()    {}
func (*CMsgSteamDatagramClientPingSampleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{15}
}

func (m *CMsgSteamDatagramClientPingSampleRequest) GetClientCookie() uint32 {
	if m != nil && m.ClientCookie != nil {
		return *m.ClientCookie
	}
	return 0
}

type CMsgSteamDatagramClientPingSampleReply struct {
	ClientCookie     *uint32                                                  `protobuf:"fixed32,1,opt,name=client_cookie" json:"client_cookie,omitempty"`
	RoutingClusters  []*CMsgSteamDatagramClientPingSampleReply_RoutingCluster `protobuf:"bytes,2,rep,name=routing_clusters" json:"routing_clusters,omitempty"`
	XXX_unrecognized []byte                                                   `json:"-"`
}

func (m *CMsgSteamDatagramClientPingSampleReply) Reset() {
	*m = CMsgSteamDatagramClientPingSampleReply{}
}
func (m *CMsgSteamDatagramClientPingSampleReply) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramClientPingSampleReply) ProtoMessage()    {}
func (*CMsgSteamDatagramClientPingSampleReply) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{16}
}

func (m *CMsgSteamDatagramClientPingSampleReply) GetClientCookie() uint32 {
	if m != nil && m.ClientCookie != nil {
		return *m.ClientCookie
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply) GetRoutingClusters() []*CMsgSteamDatagramClientPingSampleReply_RoutingCluster {
	if m != nil {
		return m.RoutingClusters
	}
	return nil
}

type CMsgSteamDatagramClientPingSampleReply_RoutingCluster struct {
	Id               *uint32 `protobuf:"fixed32,1,opt,name=id" json:"id,omitempty"`
	FrontPingMs      *uint32 `protobuf:"varint,2,opt,name=front_ping_ms" json:"front_ping_ms,omitempty"`
	E2EPingMs        *uint32 `protobuf:"varint,3,opt,name=e2e_ping_ms" json:"e2e_ping_ms,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSteamDatagramClientPingSampleReply_RoutingCluster) Reset() {
	*m = CMsgSteamDatagramClientPingSampleReply_RoutingCluster{}
}
func (m *CMsgSteamDatagramClientPingSampleReply_RoutingCluster) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramClientPingSampleReply_RoutingCluster) ProtoMessage() {}
func (*CMsgSteamDatagramClientPingSampleReply_RoutingCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{16, 0}
}

func (m *CMsgSteamDatagramClientPingSampleReply_RoutingCluster) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_RoutingCluster) GetFrontPingMs() uint32 {
	if m != nil && m.FrontPingMs != nil {
		return *m.FrontPingMs
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_RoutingCluster) GetE2EPingMs() uint32 {
	if m != nil && m.E2EPingMs != nil {
		return *m.E2EPingMs
	}
	return 0
}

type CMsgSteamDatagramClientSwitchedPrimary struct {
	ClientCookie          *uint32                                               `protobuf:"fixed32,1,opt,name=client_cookie" json:"client_cookie,omitempty"`
	FromIp                *uint32                                               `protobuf:"fixed32,2,opt,name=from_ip" json:"from_ip,omitempty"`
	FromPort              *uint32                                               `protobuf:"varint,3,opt,name=from_port" json:"from_port,omitempty"`
	FromRouterCluster     *uint32                                               `protobuf:"fixed32,4,opt,name=from_router_cluster" json:"from_router_cluster,omitempty"`
	FromActiveTime        *uint32                                               `protobuf:"varint,5,opt,name=from_active_time" json:"from_active_time,omitempty"`
	FromActivePacketsRecv *uint32                                               `protobuf:"varint,6,opt,name=from_active_packets_recv" json:"from_active_packets_recv,omitempty"`
	FromDroppedReason     *string                                               `protobuf:"bytes,7,opt,name=from_dropped_reason" json:"from_dropped_reason,omitempty"`
	GapMs                 *uint32                                               `protobuf:"varint,8,opt,name=gap_ms" json:"gap_ms,omitempty"`
	FromQualityNow        *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality `protobuf:"bytes,9,opt,name=from_quality_now" json:"from_quality_now,omitempty"`
	ToQualityNow          *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality `protobuf:"bytes,10,opt,name=to_quality_now" json:"to_quality_now,omitempty"`
	FromQualityThen       *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality `protobuf:"bytes,11,opt,name=from_quality_then" json:"from_quality_then,omitempty"`
	ToQualityThen         *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality `protobuf:"bytes,12,opt,name=to_quality_then" json:"to_quality_then,omitempty"`
	XXX_unrecognized      []byte                                                `json:"-"`
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) Reset() {
	*m = CMsgSteamDatagramClientSwitchedPrimary{}
}
func (m *CMsgSteamDatagramClientSwitchedPrimary) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramClientSwitchedPrimary) ProtoMessage()    {}
func (*CMsgSteamDatagramClientSwitchedPrimary) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{17}
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetClientCookie() uint32 {
	if m != nil && m.ClientCookie != nil {
		return *m.ClientCookie
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromIp() uint32 {
	if m != nil && m.FromIp != nil {
		return *m.FromIp
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromPort() uint32 {
	if m != nil && m.FromPort != nil {
		return *m.FromPort
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromRouterCluster() uint32 {
	if m != nil && m.FromRouterCluster != nil {
		return *m.FromRouterCluster
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromActiveTime() uint32 {
	if m != nil && m.FromActiveTime != nil {
		return *m.FromActiveTime
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromActivePacketsRecv() uint32 {
	if m != nil && m.FromActivePacketsRecv != nil {
		return *m.FromActivePacketsRecv
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromDroppedReason() string {
	if m != nil && m.FromDroppedReason != nil {
		return *m.FromDroppedReason
	}
	return ""
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetGapMs() uint32 {
	if m != nil && m.GapMs != nil {
		return *m.GapMs
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromQualityNow() *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality {
	if m != nil {
		return m.FromQualityNow
	}
	return nil
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetToQualityNow() *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality {
	if m != nil {
		return m.ToQualityNow
	}
	return nil
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromQualityThen() *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality {
	if m != nil {
		return m.FromQualityThen
	}
	return nil
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetToQualityThen() *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality {
	if m != nil {
		return m.ToQualityThen
	}
	return nil
}

type CMsgSteamDatagramClientSwitchedPrimary_RouterQuality struct {
	Score            *uint32 `protobuf:"varint,1,opt,name=score" json:"score,omitempty"`
	FrontPing        *uint32 `protobuf:"varint,2,opt,name=front_ping" json:"front_ping,omitempty"`
	BackPing         *uint32 `protobuf:"varint,3,opt,name=back_ping" json:"back_ping,omitempty"`
	SecondsUntilDown *uint32 `protobuf:"varint,4,opt,name=seconds_until_down" json:"seconds_until_down,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) Reset() {
	*m = CMsgSteamDatagramClientSwitchedPrimary_RouterQuality{}
}
func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) ProtoMessage() {}
func (*CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) Descriptor() ([]byte, []int) {
	return fileDescriptor35, []int{17, 0}
}

func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) GetScore() uint32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) GetFrontPing() uint32 {
	if m != nil && m.FrontPing != nil {
		return *m.FrontPing
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) GetBackPing() uint32 {
	if m != nil && m.BackPing != nil {
		return *m.BackPing
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) GetSecondsUntilDown() uint32 {
	if m != nil && m.SecondsUntilDown != nil {
		return *m.SecondsUntilDown
	}
	return 0
}

func init() {
	proto.RegisterType((*CMsgSteamDatagramRouterPingReply)(nil), "dota.CMsgSteamDatagramRouterPingReply")
	proto.RegisterType((*CMsgSteamDatagramGameserverPing)(nil), "dota.CMsgSteamDatagramGameserverPing")
	proto.RegisterType((*CMsgSteamDatagramGameServerAuthTicket)(nil), "dota.CMsgSteamDatagramGameServerAuthTicket")
	proto.RegisterType((*CMsgSteamDatagramGameServerAuthTicket_ExtraField)(nil), "dota.CMsgSteamDatagramGameServerAuthTicket.ExtraField")
	proto.RegisterType((*CMsgSteamDatagramGameserverSessionRequest)(nil), "dota.CMsgSteamDatagramGameserverSessionRequest")
	proto.RegisterType((*CMsgSteamDatagramGameserverSessionEstablished)(nil), "dota.CMsgSteamDatagramGameserverSessionEstablished")
	proto.RegisterType((*CMsgSteamDatagramNoSession)(nil), "dota.CMsgSteamDatagramNoSession")
	proto.RegisterType((*CMsgSteamDatagramDiagnostic)(nil), "dota.CMsgSteamDatagramDiagnostic")
	proto.RegisterType((*CMsgSteamDatagramDataCenterState)(nil), "dota.CMsgSteamDatagramDataCenterState")
	proto.RegisterType((*CMsgSteamDatagramDataCenterState_Server)(nil), "dota.CMsgSteamDatagramDataCenterState.Server")
	proto.RegisterType((*CMsgSteamDatagramDataCenterState_DataCenter)(nil), "dota.CMsgSteamDatagramDataCenterState.DataCenter")
	proto.RegisterType((*CMsgSteamDatagramLinkInstantaneousStats)(nil), "dota.CMsgSteamDatagramLinkInstantaneousStats")
	proto.RegisterType((*CMsgSteamDatagramLinkLifetimeStats)(nil), "dota.CMsgSteamDatagramLinkLifetimeStats")
	proto.RegisterType((*CMsgSteamDatagramConnectionQuality)(nil), "dota.CMsgSteamDatagramConnectionQuality")
	proto.RegisterType((*CMsgSteamDatagramConnectionStatsClientToRouter)(nil), "dota.CMsgSteamDatagramConnectionStatsClientToRouter")
	proto.RegisterType((*CMsgSteamDatagramConnectionStatsRouterToClient)(nil), "dota.CMsgSteamDatagramConnectionStatsRouterToClient")
	proto.RegisterType((*CMsgSteamDatagramConnectionStatsRouterToServer)(nil), "dota.CMsgSteamDatagramConnectionStatsRouterToServer")
	proto.RegisterType((*CMsgSteamDatagramConnectionStatsServerToRouter)(nil), "dota.CMsgSteamDatagramConnectionStatsServerToRouter")
	proto.RegisterType((*CMsgSteamDatagramClientPingSampleRequest)(nil), "dota.CMsgSteamDatagramClientPingSampleRequest")
	proto.RegisterType((*CMsgSteamDatagramClientPingSampleReply)(nil), "dota.CMsgSteamDatagramClientPingSampleReply")
	proto.RegisterType((*CMsgSteamDatagramClientPingSampleReply_RoutingCluster)(nil), "dota.CMsgSteamDatagramClientPingSampleReply.RoutingCluster")
	proto.RegisterType((*CMsgSteamDatagramClientSwitchedPrimary)(nil), "dota.CMsgSteamDatagramClientSwitchedPrimary")
	proto.RegisterType((*CMsgSteamDatagramClientSwitchedPrimary_RouterQuality)(nil), "dota.CMsgSteamDatagramClientSwitchedPrimary.RouterQuality")
	proto.RegisterEnum("dota.ESteamDatagramMsgID", ESteamDatagramMsgID_name, ESteamDatagramMsgID_value)
}

func init() { proto.RegisterFile("steamdatagram_messages.proto", fileDescriptor35) }

var fileDescriptor35 = []byte{
	// 1650 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xc4, 0x58, 0x41, 0x6f, 0xdb, 0xc8,
	0x15, 0x2e, 0x25, 0x59, 0xb2, 0x9e, 0x24, 0x9b, 0x1a, 0xa7, 0x5e, 0x5a, 0xce, 0x66, 0xb5, 0x6c,
	0x77, 0xa3, 0x24, 0x8d, 0x9a, 0xa8, 0xbb, 0x7b, 0x48, 0xd0, 0x43, 0x62, 0xa7, 0x69, 0x80, 0xa4,
	0x48, 0x6d, 0xe7, 0xcc, 0x8e, 0xc9, 0xb1, 0x34, 0x30, 0x45, 0x32, 0x33, 0x43, 0xdb, 0xea, 0xa9,
	0x40, 0x7f, 0x40, 0x0f, 0x45, 0xff, 0x40, 0x0f, 0x3d, 0xf4, 0xd4, 0xdf, 0x53, 0xf4, 0xd0, 0x5f,
	0x50, 0xa0, 0x40, 0x2f, 0x05, 0x7a, 0x28, 0x66, 0x86, 0xb4, 0x48, 0x89, 0x94, 0x95, 0xe4, 0xb0,
	0x27, 0x41, 0xf3, 0xde, 0xbc, 0x79, 0xdf, 0x7b, 0xdf, 0x7b, 0xf3, 0x86, 0x70, 0x9b, 0x0b, 0x82,
	0xa7, 0x1e, 0x16, 0x78, 0xcc, 0xf0, 0xd4, 0x99, 0x12, 0xce, 0xf1, 0x98, 0xf0, 0x61, 0xc4, 0x42,
	0x11, 0xa2, 0x9a, 0x17, 0x0a, 0x6c, 0xff, 0xc7, 0x80, 0xfe, 0xc1, 0x1b, 0x3e, 0x3e, 0x96, 0xaa,
	0x87, 0x89, 0xea, 0x51, 0x18, 0x0b, 0xc2, 0xde, 0xd2, 0x60, 0x7c, 0x44, 0x22, 0x7f, 0x86, 0x2c,
	0x30, 0x5d, 0x9f, 0x92, 0x40, 0x38, 0x82, 0x4e, 0x09, 0x17, 0x78, 0x1a, 0x59, 0x46, 0xdf, 0x18,
	0x34, 0x90, 0x0d, 0xbb, 0x3e, 0x16, 0x24, 0x70, 0x67, 0x8e, 0x3c, 0xc7, 0x25, 0x81, 0x20, 0xcc,
	0xa1, 0x1e, 0xb7, 0x2a, 0xfd, 0xea, 0xa0, 0xf1, 0xbc, 0x62, 0x1a, 0x68, 0x1f, 0xb6, 0x53, 0x9d,
	0x88, 0x06, 0x63, 0x67, 0xca, 0xad, 0x6a, 0xbf, 0x3a, 0xe8, 0x28, 0xe1, 0x2e, 0x6c, 0xcd, 0xc2,
	0x98, 0x39, 0x51, 0x7c, 0xea, 0x53, 0xd7, 0xa1, 0x91, 0x55, 0x53, 0x86, 0x77, 0xa0, 0xc5, 0x09,
	0xbb, 0x20, 0x4c, 0x1d, 0x69, 0x6d, 0xa8, 0xc5, 0x2e, 0x34, 0xdd, 0x09, 0xf6, 0x7d, 0x12, 0x8c,
	0x89, 0x55, 0xef, 0x1b, 0x83, 0x3a, 0xba, 0x03, 0xbb, 0x9c, 0xb8, 0x61, 0xe0, 0x71, 0x27, 0x0e,
	0x04, 0xf5, 0x1d, 0x3e, 0x89, 0x85, 0x17, 0x5e, 0x06, 0x56, 0xa3, 0x6f, 0x0c, 0x3a, 0xe8, 0x87,
	0xd0, 0x49, 0x5c, 0x77, 0xc3, 0xf0, 0x9c, 0x12, 0x6b, 0x53, 0x5a, 0xb2, 0xff, 0x61, 0xc0, 0x17,
	0x4b, 0xb0, 0x5f, 0xe2, 0x29, 0xd1, 0x87, 0x4a, 0xe8, 0xd2, 0xb5, 0x64, 0x2b, 0x27, 0x9c, 0xd3,
	0x30, 0x50, 0x98, 0x3b, 0xe8, 0x33, 0xd8, 0x4e, 0xd7, 0xe5, 0x6e, 0x87, 0x7a, 0x56, 0x45, 0xf9,
	0x52, 0x14, 0xa6, 0xaa, 0x72, 0xdc, 0x02, 0x93, 0xa9, 0x98, 0x66, 0x24, 0x1a, 0xe7, 0x97, 0xb0,
	0x97, 0x48, 0xc6, 0xd7, 0xa7, 0x3b, 0x49, 0xb8, 0x14, 0xea, 0x0e, 0xda, 0x83, 0x2e, 0x27, 0xef,
	0x9d, 0x20, 0x9e, 0x9e, 0x12, 0xe6, 0x68, 0x6d, 0x85, 0xbe, 0x23, 0x5d, 0xcc, 0x88, 0xc8, 0x88,
	0x68, 0xd4, 0xf6, 0x9f, 0xaa, 0xf0, 0x55, 0x21, 0xbc, 0x63, 0x75, 0xc0, 0xb3, 0x58, 0x4c, 0x4e,
	0xa8, 0x7b, 0x4e, 0x84, 0x8c, 0xb3, 0x74, 0xc9, 0x21, 0x57, 0x11, 0x65, 0xb3, 0x24, 0xab, 0xfb,
	0xb0, 0x83, 0x63, 0x31, 0x09, 0x19, 0xfd, 0x2d, 0xf1, 0x16, 0x51, 0xde, 0x86, 0x5b, 0x19, 0xe1,
	0x3c, 0x6f, 0xd5, 0x74, 0x6b, 0x06, 0xc8, 0xf5, 0xd6, 0x9a, 0xda, 0xba, 0x07, 0xdd, 0x8c, 0x30,
	0x20, 0x42, 0x8a, 0x36, 0x94, 0xa8, 0x0b, 0x4d, 0x4e, 0xc7, 0x01, 0x16, 0x31, 0xd3, 0xa9, 0x6d,
	0xa3, 0x2d, 0xa8, 0xe3, 0x28, 0x92, 0x2a, 0x3a, 0x95, 0xaf, 0xa1, 0x4d, 0xae, 0x04, 0xc3, 0xce,
	0x19, 0x25, 0xbe, 0xc7, 0xad, 0xcd, 0x7e, 0x75, 0xd0, 0x1a, 0x7d, 0x37, 0x94, 0x3c, 0x1e, 0xae,
	0x85, 0x76, 0xf8, 0x42, 0xee, 0xff, 0x85, 0xdc, 0xde, 0xe3, 0x00, 0xf3, 0x7f, 0xa8, 0x0d, 0xb5,
	0x00, 0x4f, 0x89, 0xc2, 0xdf, 0x44, 0xb7, 0xa0, 0xcd, 0x05, 0x93, 0x5c, 0xbd, 0xc0, 0x7e, 0x4c,
	0x14, 0xf0, 0xa6, 0x0c, 0x15, 0x0d, 0xc4, 0xcf, 0x46, 0xc9, 0xa2, 0xc4, 0xdb, 0x95, 0xfc, 0x3a,
	0xa3, 0x57, 0xc4, 0xbb, 0x5e, 0xd6, 0x69, 0x4d, 0x97, 0xbf, 0xfb, 0x26, 0x59, 0x56, 0x28, 0xed,
	0xbf, 0x1a, 0x70, 0x6f, 0x05, 0xed, 0x8e, 0x35, 0xcf, 0x8e, 0xc8, 0xfb, 0x98, 0x70, 0x81, 0x9e,
	0x42, 0x5d, 0x28, 0xbf, 0x95, 0x5b, 0xad, 0xd1, 0x83, 0x0f, 0x80, 0xaa, 0xd8, 0x9b, 0xd6, 0x8a,
	0xae, 0xa1, 0xea, 0x72, 0x0d, 0xe9, 0xb4, 0x2c, 0xd5, 0x88, 0xaa, 0x36, 0xfb, 0xf7, 0x06, 0x3c,
	0xbc, 0xd9, 0xd9, 0x17, 0x5c, 0xe0, 0x53, 0x9f, 0xf2, 0x09, 0xf1, 0x96, 0x0d, 0x19, 0xab, 0x38,
	0x51, 0xbd, 0xa1, 0x80, 0x6b, 0x8a, 0xca, 0x7f, 0x34, 0xa0, 0xb7, 0xe4, 0xc5, 0xaf, 0xc2, 0xe4,
	0xf4, 0xe5, 0x23, 0x1b, 0xea, 0xc8, 0xe5, 0xb6, 0x52, 0x29, 0x6a, 0x2b, 0xa5, 0x21, 0x29, 0xf7,
	0x4a, 0xd5, 0xa4, 0xfd, 0x73, 0xd8, 0x5f, 0x72, 0xea, 0x90, 0xe2, 0x71, 0x10, 0x72, 0x41, 0x5d,
	0x64, 0xc2, 0x26, 0x27, 0x17, 0x84, 0x51, 0x31, 0x4b, 0x9a, 0x46, 0x1b, 0x6a, 0x82, 0x5c, 0x09,
	0x4d, 0x25, 0xfb, 0xbf, 0x45, 0x5d, 0x57, 0xfe, 0x1e, 0xa8, 0x06, 0x7a, 0x2c, 0xb0, 0x20, 0xe8,
	0x25, 0xb4, 0x65, 0x4f, 0x75, 0x74, 0x53, 0xe5, 0x96, 0xa1, 0xf8, 0xfe, 0xb8, 0x84, 0x04, 0x0b,
	0xbb, 0x87, 0xf3, 0xff, 0xbd, 0xfb, 0x50, 0xd7, 0xf4, 0x40, 0xdb, 0xd0, 0xc0, 0x9e, 0xc7, 0x08,
	0xe7, 0x09, 0xd3, 0xb7, 0xa1, 0x91, 0xf6, 0x64, 0xe9, 0x59, 0xa7, 0xf7, 0x1b, 0x80, 0xf9, 0x4e,
	0xe9, 0xb5, 0x1b, 0x7a, 0x69, 0x59, 0x1c, 0x42, 0x27, 0xcd, 0x21, 0x9e, 0x46, 0x3e, 0x51, 0x3d,
	0xbe, 0x35, 0x7a, 0xb8, 0xa6, 0x47, 0xda, 0x07, 0xfb, 0xdf, 0x06, 0xdc, 0x5d, 0xd2, 0x7d, 0x4d,
	0x83, 0xf3, 0x57, 0x01, 0x17, 0x38, 0x10, 0x38, 0x20, 0x61, 0xcc, 0xe5, 0x16, 0x8e, 0xbe, 0x80,
	0xcf, 0xc2, 0x58, 0x38, 0x11, 0x96, 0x94, 0xe6, 0x4e, 0x24, 0x8f, 0x26, 0xae, 0x73, 0xf5, 0xf8,
	0x51, 0x12, 0xd6, 0x3d, 0xe8, 0x4a, 0x85, 0xd3, 0x99, 0x20, 0xd7, 0x62, 0x8d, 0x44, 0xa6, 0x90,
	0x06, 0x85, 0x5b, 0xab, 0x4a, 0x6e, 0x81, 0x49, 0x83, 0x85, 0x9d, 0x8a, 0x72, 0xd9, 0xa0, 0xe8,
	0x0e, 0xbc, 0x0f, 0x3b, 0xa9, 0x1d, 0x8f, 0x85, 0x51, 0x24, 0xfb, 0x9e, 0x2b, 0x92, 0x1e, 0x6c,
	0x43, 0x2f, 0x15, 0x5e, 0x12, 0xca, 0x3c, 0x87, 0xcb, 0xf2, 0x0d, 0x5c, 0xa2, 0x74, 0x74, 0x3f,
	0xfe, 0x43, 0x05, 0xec, 0x42, 0xcc, 0xaf, 0xe9, 0x19, 0x91, 0x4c, 0xd4, 0x70, 0x6f, 0x41, 0x3b,
	0x35, 0xc5, 0x49, 0x20, 0x94, 0xa3, 0x35, 0xe9, 0xce, 0xf9, 0xa9, 0x5e, 0xa8, 0xa9, 0x85, 0x8c,
	0x1a, 0x23, 0xee, 0x85, 0x72, 0x32, 0x55, 0x53, 0x0b, 0x75, 0xb5, 0x70, 0x07, 0x76, 0xb3, 0x6a,
	0xd7, 0x7e, 0xe9, 0x7e, 0x5a, 0x93, 0x8d, 0x3c, 0x27, 0x4f, 0xa0, 0xa9, 0x1b, 0xb2, 0x26, 0x2f,
	0xa6, 0x9c, 0x54, 0x86, 0x39, 0x3c, 0x73, 0x42, 0xe6, 0x11, 0x66, 0x35, 0x0b, 0x0f, 0xf0, 0xe2,
	0xc8, 0xa7, 0x2e, 0x16, 0xc4, 0x02, 0x25, 0xef, 0x01, 0xca, 0xc9, 0xfd, 0x98, 0xb9, 0x13, 0xab,
	0x25, 0x65, 0xf6, 0x5f, 0x8c, 0x82, 0x88, 0x1c, 0x84, 0x41, 0x40, 0x5c, 0x41, 0xc3, 0xe0, 0xd7,
	0x31, 0xf6, 0xa9, 0x98, 0x49, 0xca, 0xd1, 0x2c, 0x2d, 0x92, 0x4e, 0x58, 0x46, 0xb9, 0x12, 0x1a,
	0x3d, 0x81, 0x4d, 0x3f, 0x09, 0xb4, 0x22, 0x47, 0x6b, 0x34, 0x58, 0x61, 0x20, 0x97, 0x13, 0x59,
	0xaa, 0xc3, 0x15, 0x8e, 0x2a, 0xa5, 0x03, 0xd5, 0x81, 0x4e, 0x42, 0x3d, 0x37, 0xa1, 0x6f, 0xa1,
	0xea, 0x8e, 0x58, 0xe2, 0x6a, 0xd9, 0x49, 0xcb, 0x58, 0xd5, 0x36, 0x7e, 0x83, 0x83, 0xcb, 0xdb,
	0xca, 0xa7, 0x8e, 0xe2, 0xd9, 0x47, 0xf7, 0x40, 0x35, 0x34, 0x38, 0xd2, 0xcd, 0xa6, 0x62, 0x71,
	0x6e, 0x91, 0xab, 0x04, 0x76, 0xec, 0x7f, 0x55, 0x6e, 0xc6, 0xae, 0x31, 0x9f, 0x84, 0x3a, 0x06,
	0x12, 0x04, 0x1b, 0xb9, 0x1f, 0x83, 0x9d, 0x8f, 0xdc, 0x0f, 0xc6, 0xfe, 0x63, 0xb8, 0xbd, 0x88,
	0xdd, 0x39, 0x63, 0xe1, 0x34, 0x9d, 0x92, 0x74, 0x1c, 0x4a, 0xb5, 0x74, 0x37, 0x5b, 0x7f, 0x12,
	0x2b, 0xbf, 0x15, 0xea, 0xc5, 0xc3, 0x66, 0x63, 0x31, 0xe0, 0x32, 0x36, 0x9b, 0x8b, 0x01, 0x97,
	0xc8, 0x55, 0x16, 0xec, 0xbf, 0x7d, 0x40, 0xc0, 0x93, 0x96, 0xae, 0x02, 0xce, 0xbf, 0x7f, 0xb2,
	0x95, 0x8f, 0xb8, 0x39, 0xf8, 0x69, 0x4b, 0x5d, 0xe0, 0x5b, 0xbd, 0x6c, 0xb2, 0x6e, 0xa4, 0x83,
	0x63, 0x7e, 0x14, 0x97, 0x22, 0x15, 0x47, 0xfb, 0x7f, 0x6b, 0xd4, 0xa7, 0x0e, 0x55, 0xb6, 0x3e,
	0xf9, 0xc7, 0xd5, 0xe7, 0xc7, 0x70, 0x34, 0x97, 0x68, 0x96, 0x5c, 0x3e, 0x0b, 0xd9, 0xaf, 0x95,
	0xc1, 0xdf, 0x28, 0x87, 0xaf, 0x42, 0x66, 0x3f, 0x83, 0xc1, 0xb2, 0x0f, 0x4a, 0x57, 0xbe, 0x61,
	0x8e, 0xd5, 0x3d, 0x9d, 0xce, 0x93, 0xc5, 0xe3, 0x99, 0xfd, 0x4f, 0x03, 0xbe, 0x5e, 0xc3, 0x86,
	0x7c, 0x08, 0x96, 0x0c, 0x78, 0xef, 0x74, 0xee, 0xe5, 0x9d, 0xe9, 0xfa, 0x31, 0x57, 0xd3, 0x8a,
	0x9e, 0x0d, 0x9e, 0x96, 0x85, 0xa9, 0xc8, 0xfc, 0xf0, 0x48, 0x1b, 0x39, 0xd0, 0x36, 0x7a, 0xbf,
	0x84, 0xad, 0xfc, 0x0a, 0x02, 0xa8, 0x50, 0x2f, 0x39, 0x54, 0x8e, 0xd8, 0x2c, 0x0c, 0x84, 0x93,
	0x1b, 0x60, 0x64, 0x64, 0xc9, 0x88, 0x64, 0x5e, 0x9a, 0x32, 0x4a, 0x7f, 0xde, 0x28, 0x85, 0x78,
	0x7c, 0x49, 0x85, 0x3b, 0x21, 0xde, 0x5b, 0x46, 0xa7, 0x98, 0x95, 0x42, 0xdc, 0x86, 0x86, 0x6a,
	0x19, 0xd7, 0x93, 0x64, 0x17, 0x9a, 0x6a, 0x21, 0x0a, 0x99, 0x48, 0x92, 0xba, 0x0f, 0x3b, 0x99,
	0xe6, 0x93, 0x86, 0x22, 0xa9, 0x02, 0x0b, 0x4c, 0x25, 0xc4, 0xae, 0xa0, 0x17, 0x64, 0xfe, 0xaa,
	0xed, 0xa0, 0x3e, 0x58, 0x59, 0x49, 0xee, 0x6a, 0xaf, 0xe7, 0x0c, 0xa7, 0xc3, 0x07, 0x23, 0x98,
	0x87, 0xfa, 0x85, 0xdb, 0x94, 0xcf, 0xa4, 0x31, 0x8e, 0x24, 0x56, 0xdd, 0x58, 0x4e, 0x92, 0x83,
	0xde, 0x6b, 0xfe, 0x39, 0x41, 0x78, 0xa9, 0xba, 0x4b, 0x6b, 0xf4, 0x64, 0x65, 0x32, 0x16, 0x02,
	0x31, 0xd4, 0xc5, 0x92, 0xb2, 0xf8, 0x08, 0xb6, 0x44, 0x98, 0xb3, 0x09, 0x9f, 0x6c, 0xf3, 0x1d,
	0x74, 0x73, 0x9e, 0x8a, 0x09, 0x09, 0xd4, 0x78, 0xf0, 0x69, 0x66, 0x8f, 0x61, 0x3b, 0xe3, 0xaa,
	0x32, 0xda, 0xfe, 0x54, 0xa3, 0x3d, 0x0c, 0x9d, 0xfc, 0x29, 0x1d, 0xd8, 0xe0, 0x6e, 0xc8, 0x48,
	0x32, 0x88, 0x22, 0x80, 0x39, 0x1b, 0x13, 0x2a, 0x76, 0xa1, 0x79, 0x8a, 0xdd, 0x73, 0xbd, 0xa4,
	0x29, 0xd2, 0x03, 0x94, 0xbf, 0x41, 0xe6, 0x2f, 0x9d, 0xfb, 0x7f, 0xdf, 0x80, 0x9d, 0x17, 0x39,
	0xc7, 0xde, 0xf0, 0xf1, 0xab, 0x43, 0x74, 0x0f, 0xbe, 0x3a, 0x77, 0x96, 0x04, 0x4e, 0xf6, 0x23,
	0x8d, 0xaa, 0x6f, 0xd3, 0x40, 0x77, 0xe1, 0x47, 0x37, 0xa9, 0x46, 0xfe, 0xcc, 0xac, 0xa0, 0x87,
	0x70, 0xaf, 0x48, 0x31, 0xff, 0x05, 0x24, 0xb5, 0x5b, 0x45, 0x0f, 0xe0, 0xee, 0x3a, 0xea, 0xd2,
	0x76, 0x0d, 0x3d, 0x82, 0x9f, 0xac, 0x56, 0xce, 0x3f, 0x73, 0xcd, 0x0d, 0xf4, 0x0d, 0x3c, 0x5a,
	0x6b, 0x47, 0xe6, 0xad, 0x69, 0xd6, 0xd1, 0x97, 0xf0, 0x79, 0xd1, 0xae, 0xeb, 0xb7, 0xa1, 0xd9,
	0x40, 0x36, 0xdc, 0x29, 0x52, 0x99, 0xbf, 0xd4, 0xcc, 0x4d, 0x74, 0x1f, 0xbe, 0x2e, 0xd4, 0x91,
	0xaf, 0x97, 0xdc, 0x5c, 0x67, 0x36, 0x57, 0xe9, 0xe6, 0xaf, 0x65, 0x13, 0x56, 0xe9, 0xe6, 0xef,
	0x23, 0xb3, 0xb5, 0x8e, 0x5d, 0xed, 0x8b, 0xd9, 0x46, 0x9f, 0xc3, 0x5e, 0x91, 0xae, 0xba, 0xe8,
	0xcc, 0x0e, 0xfa, 0x29, 0x3c, 0x28, 0x12, 0x97, 0xdc, 0x09, 0xe6, 0x56, 0x19, 0x15, 0x0a, 0x3b,
	0xb4, 0xb9, 0x8d, 0xbe, 0x85, 0xc7, 0xe5, 0xea, 0x29, 0xa4, 0x85, 0x5a, 0x32, 0xcd, 0xe7, 0xd5,
	0xdf, 0x19, 0x3f, 0xf8, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe1, 0xcb, 0xd0, 0x61, 0x91, 0x14,
	0x00, 0x00,
}
