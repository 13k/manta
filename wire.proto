// This file contains temporary wire-level protobuf messages that we have
// identified to be different or missing from the current protobuf files
// last updated in January 2015. These messages will disappear once we have
// new protobufs extracted from the real Source 2 client.

option go_package = "manta";

message WireSendTable {
  required int32 index = 1;
  optional int32 unknown2 = 2; // sometimes present, unknown. flags?
  repeated int32 properties = 3;
}

message WireSendProp {
  required int32 type_index = 1; // identifier, mapped from Thing10.Unknown3. has a string
  required int32 var_index = 2; // string index
  optional int32 unknown3 = 3; // num_bits?
  optional float low_value = 4; // low_value ?
  optional float high_value = 5; // high_value ?
  optional int32 unknown6 = 6;
  optional int32 unknown7 = 7;
  optional int32 unknown8 = 8;
  required int32 unknown9 = 9; // type?
}

message WireSource1GameEventList {
  message key_t {
    required int32 type = 1;
    required string name = 2;
  }

  message descriptor_t {
    required int32 eventid = 1;
    required string name = 2;
    repeated WireSource1GameEventList.key_t keys = 3;
  }

  repeated WireSource1GameEventList.descriptor_t descriptors = 1;
}

message WireSource1GameEvent {
  message key_t {
    optional int32 type = 1;
    optional string val_string = 2;
    optional float val_float = 3;
    optional int32 val_long = 4;
    optional int32 val_short = 5;
    optional int32 val_byte = 6;
    optional bool val_bool = 7;
    optional uint64 val_uint64 = 8;
  }

  optional string event_name = 1;
  required int32 eventid = 2;
  repeated WireSource1GameEvent.key_t keys = 3;
}

message WireCreateStringTable {
  optional string name = 1;
  optional int32 max_entries = 2;
  optional int32 num_entries = 3;
  optional bool user_data_fixed_size = 4;
  optional int32 user_data_size = 5;
  optional int32 user_data_size_bits = 6;
  optional bytes string_data = 7;
  optional int32 compressed_size = 8;
  optional bool data_compressed = 9;
  optional int32 flags = 10;
  optional int32 unknown11 = 11;
  optional int32 unknown12 = 12;
  optional int32 unknown13 = 13;
  optional int32 unknown14 = 14;
}

/*
message CDOTAUserMsg_SpectatorPlayerUnitOrders {
  optional int32 entindex = 1;
  optional int32 order_type = 2;
  repeated int32 units = 3;
  optional int32 target_index = 4;
  optional int32 ability_index = 5;
  optional .CMsgVector position = 6;
  optional bool queue = 7;
}
*/

message TempVector {
  optional float x = 1;
  optional float y = 2;
  optional float z = 3;
}

message TempUnitOrder {
  required int32 entindex = 1;
  required int32 order_type = 2;
  optional int32 units = 3;
  optional int32 target_index = 4;
  optional int32 ability_index = 5;
  optional .TempVector position = 6;
  optional bool queue = 7;
}

// message CSVCMsg_SendTable {
//   message sendprop_t {
//     optional int32 type = 1;
//     optional string var_name = 2;
//     optional int32 flags = 3;
//     optional int32 priority = 4;
//     optional string dt_name = 5;
//     optional int32 num_elements = 6;
//     optional float low_value = 7;
//     optional float high_value = 8;
//     optional int32 num_bits = 9;
//   }
//
//   optional bool is_end = 1;
//   optional string net_table_name = 2;
//   optional bool needs_decoder = 3;
//   repeated .CSVCMsg_SendTable.sendprop_t props = 4;
// }
